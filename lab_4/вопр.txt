Ссылка на seq_file
https://elixir.bootlin.com/linux/v6.14.4/source/fs/seq_file.c#L572

1. точки входа

6 точек входа

- read
- write

+ open
+ release

-- init
-- exit
(Говорить попарно)

Точки входа регистрируется в init через структуру proc_ops

3. Почему show, next. start, stop не являются точками входа

они инициализируются в seq_open и вызываются в seq_read

4. Почему указатель pos меняется с 0 на 1 и почему вообще он принимает такие значения?

Функция ядра seq_next инкрементирует значение указателя pos, таким образом pos показывает не количественную информацию (в байтах), а логическую (прочитал/непрочитал).

5. Почему после второго read() не вызывается show()?

В функции ядра seq_read_iter вызов seq_show не осуществляется, если вызов seq_start возвращает NULL.

6. Какая основная точка входа (??)(single)

single_open, так как инициализирует поля структуры seq_operations (+-)

7. Почему read вызывается 2 раз

Проверка файла на EOF

8. С помощьб какой функции мы получаем task_struct по pid

https://elixir.bootlin.com/linux/v4.9/source/include/linux/pid.h#L83
pid_task

struct pid получаем с помощью функции find_get_pid
https://elixir.bootlin.com/linux/v4.9/source/include/linux/pid.h#L116